{
  "openapi": "3.0.0",
  "info": {
    "title": "Property Management API",
    "description": "Complete API for Property Management System",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/api/health": {
      "get": {
        "tags": [
          "Health Check"
        ],
        "summary": "Health Check",
        "description": "Check if the API server is running",
        "responses": {
          "200": {
            "description": "Server is running",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Planör Portal API is running"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-15T10:30:00.000Z"
                    }
                  }
                },
                "example": {
                  "status": "OK",
                  "message": "Planör Portal API is running",
                  "timestamp": "2024-01-15T10:30:00.000Z"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User Login",
        "description": "Login with email and password to get JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "admin@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string"
                            },
                            "clientId": {
                              "type": "string"
                            }
                          }
                        },
                        "token": {
                          "type": "string"
                        },
                        "expiresIn": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Login successful",
                  "data": {
                    "user": {
                      "id": "user-123",
                      "username": "admin",
                      "email": "admin@example.com",
                      "role": "admin",
                      "clientId": "client-456"
                    },
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "expiresIn": "24h"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Invalid email or password"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/send-otp": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Send OTP",
        "description": "Send OTP to user's email for verification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "OTP sent to user@example.com"
                }
              }
            }
          },
          "400": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "User not found"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify-otp": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify OTP",
        "description": "Verify OTP and get temporary token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "otp"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "otp": {
                    "type": "string",
                    "example": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "OTP verified successfully",
                  "data": {
                    "token": "temp-token-123",
                    "expiresIn": "5m"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid OTP",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Invalid OTP"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/change-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Change Password",
        "description": "Change user password (requires authentication)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password"
                ],
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "newPassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Password changed successfully"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Unauthorized access"
                }
              }
            }
          }
        }
      }
    },
    "/api/properties": {
      "get": {
        "tags": [
          "Properties"
        ],
        "summary": "Get All Properties",
        "description": "Get all properties with pagination and filters",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Properties retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Properties retrieved successfully",
                  "data": {
                    "properties": [
                      {
                        "id": "prop-123",
                        "propertyName": "Downtown Office Building",
                        "propertyCode": "DOB001",
                        "propertyType": "office",
                        "address": "123 Main St, Downtown",
                        "city": "New York",
                        "primaryContactName": "Jane Smith",
                        "email": "jane.smith@company.com",
                        "phone": "+1234567890",
                        "clientId": "client-456",
                        "createdAt": "2024-01-15T10:30:00.000Z"
                      }
                    ],
                    "pagination": {
                      "page": 1,
                      "limit": 10,
                      "total": 25,
                      "pages": 3
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Properties"
        ],
        "summary": "Create Property",
        "description": "Create a new property (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "propertyName",
                  "propertyCode",
                  "propertyType",
                  "address",
                  "city",
                  "primaryContactName",
                  "email",
                  "phone",
                  "clientId"
                ],
                "properties": {
                  "propertyName": {
                    "type": "string",
                    "example": "Downtown Office Building"
                  },
                  "propertyCode": {
                    "type": "string",
                    "example": "DOB001"
                  },
                  "propertyType": {
                    "type": "string",
                    "example": "office"
                  },
                  "address": {
                    "type": "string",
                    "example": "123 Main St, Downtown"
                  },
                  "city": {
                    "type": "string",
                    "example": "New York"
                  },
                  "primaryContactName": {
                    "type": "string",
                    "example": "Jane Smith"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "jane.smith@company.com"
                  },
                  "phone": {
                    "type": "string",
                    "example": "+1234567890"
                  },
                  "clientId": {
                    "type": "string",
                    "example": "client-id-here"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "grossArea": {
                        "type": "number",
                        "example": 1000
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Property created successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Property created successfully",
                  "data": {
                    "id": "prop-123",
                    "propertyName": "Downtown Office Building",
                    "propertyCode": "DOB001",
                    "propertyType": "office",
                    "address": "123 Main St, Downtown",
                    "city": "New York",
                    "primaryContactName": "Jane Smith",
                    "email": "jane.smith@company.com",
                    "phone": "+1234567890",
                    "clientId": "client-456",
                    "createdAt": "2024-01-15T10:30:00.000Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Validation error",
                  "errors": [
                    "Property name is required",
                    "Property code must be unique"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Property with this code already exists",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Property with this code already exists"
                }
              }
            }
          }
        }
      }
    },
    "/api/properties/{id}": {
      "get": {
        "tags": [
          "Properties"
        ],
        "summary": "Get Property by ID",
        "description": "Get property by ID (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Property retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Property retrieved successfully",
                  "data": {
                    "id": "prop-123",
                    "propertyName": "Downtown Office Building",
                    "propertyCode": "DOB001",
                    "propertyType": "office",
                    "address": "123 Main St, Downtown",
                    "city": "New York",
                    "primaryContactName": "Jane Smith",
                    "email": "jane.smith@company.com",
                    "phone": "+1234567890",
                    "clientId": "client-456",
                    "createdAt": "2024-01-15T10:30:00.000Z",
                    "updatedAt": "2024-01-15T10:30:00.000Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Property not found",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Property not found"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Properties"
        ],
        "summary": "Update Property",
        "description": "Update property (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "propertyName": {
                    "type": "string"
                  },
                  "propertyCode": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "primaryContactName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Property updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Property updated successfully",
                  "data": {
                    "id": "prop-123",
                    "propertyName": "Updated Downtown Office Building",
                    "propertyCode": "DOB001",
                    "propertyType": "office",
                    "address": "123 Main St, Downtown",
                    "city": "New York",
                    "primaryContactName": "Jane Smith",
                    "email": "jane.smith@company.com",
                    "phone": "+1234567890",
                    "updatedAt": "2024-01-15T10:30:00.000Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Property not found",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Property not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Properties"
        ],
        "summary": "Delete Property",
        "description": "Delete property (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Property deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Property deleted successfully"
                }
              }
            }
          },
          "404": {
            "description": "Property not found",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Property not found"
                }
              }
            }
          }
        }
      }
    },
    "/api/buildings/statistics": {
      "get": {
        "tags": [
          "Buildings"
        ],
        "summary": "Get Building Statistics",
        "description": "Get optimized building statistics with database-level calculations (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "propertyId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Building statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "totalBuildings": {
                              "type": "integer"
                            },
                            "totalArea": {
                              "type": "number"
                            },
                            "maintenanceUpdates": {
                              "type": "integer"
                            },
                            "totalMaintenanceCost": {
                              "type": "object",
                              "properties": {
                                "doors": {
                                  "type": "number"
                                },
                                "floors": {
                                  "type": "number"
                                },
                                "windows": {
                                  "type": "number"
                                },
                                "walls": {
                                  "type": "number"
                                },
                                "roofs": {
                                  "type": "number"
                                },
                                "areas": {
                                  "type": "number"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Building statistics retrieved successfully",
                  "data": {
                    "statistics": {
                      "totalBuildings": 15,
                      "totalArea": 25000.5,
                      "maintenanceUpdates": 45,
                      "totalMaintenanceCost": {
                        "doors": 12500.00,
                        "floors": 18750.00,
                        "windows": 9375.00,
                        "walls": 15000.00,
                        "roofs": 22500.00,
                        "areas": 11250.00
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/buildings": {
      "get": {
        "tags": [
          "Buildings"
        ],
        "summary": "Get All Buildings",
        "description": "Get all buildings with pagination and filters (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "propertyId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Buildings retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Buildings retrieved successfully",
                  "data": {
                    "buildings": [
                      {
                        "id": "building-123",
                        "buildingName": "Main Office Building",
                        "buildingId": "MOB001",
                        "description": "Primary office building",
                        "contactPerson": "Building Manager",
                        "contactEmail": "manager@building.com",
                        "contactPhone": "+1234567890",
                        "address": "123 Building St, City",
                        "constructionYear": 2020,
                        "propertyId": "prop-123",
                        "createdAt": "2024-01-15T10:30:00.000Z"
                      }
                    ],
                    "pagination": {
                      "page": 1,
                      "limit": 10,
                      "total": 15,
                      "pages": 2
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Buildings"
        ],
        "summary": "Create Building",
        "description": "Create a new building (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "buildingName",
                  "buildingId",
                  "propertyId"
                ],
                "properties": {
                  "buildingName": {
                    "type": "string",
                    "example": "Main Office Building"
                  },
                  "description": {
                    "type": "string",
                    "example": "Primary office building"
                  },
                  "buildingId": {
                    "type": "string",
                    "example": "MOB001"
                  },
                  "contactPerson": {
                    "type": "string",
                    "example": "Building Manager"
                  },
                  "contactEmail": {
                    "type": "string",
                    "format": "email",
                    "example": "manager@building.com"
                  },
                  "contactPhone": {
                    "type": "string",
                    "example": "+1234567890"
                  },
                  "address": {
                    "type": "string",
                    "example": "123 Building St, City"
                  },
                  "constructionYear": {
                    "type": "integer",
                    "example": 2020
                  },
                  "propertyId": {
                    "type": "string",
                    "example": "property-id-here"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Building created successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Building created successfully",
                  "data": {
                    "id": "building-123",
                    "buildingName": "Main Office Building",
                    "buildingId": "MOB001",
                    "description": "Primary office building",
                    "contactPerson": "Building Manager",
                    "contactEmail": "manager@building.com",
                    "contactPhone": "+1234567890",
                    "address": "123 Building St, City",
                    "constructionYear": 2020,
                    "propertyId": "prop-123",
                    "createdAt": "2024-01-15T10:30:00.000Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Validation error",
                  "errors": [
                    "Building name is required",
                    "Building ID must be unique"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Property not found",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Property not found"
                }
              }
            }
          }
        }
      }
    },
    "/api/buildings/{id}": {
      "get": {
        "tags": [
          "Buildings"
        ],
        "summary": "Get Building by ID",
        "description": "Get building by ID (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Building retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Building retrieved successfully",
                  "data": {
                    "id": "building-123",
                    "buildingName": "Main Office Building",
                    "buildingId": "MOB001",
                    "description": "Primary office building",
                    "contactPerson": "Building Manager",
                    "contactEmail": "manager@building.com",
                    "contactPhone": "+1234567890",
                    "address": "123 Building St, City",
                    "constructionYear": 2020,
                    "propertyId": "prop-123",
                    "createdAt": "2024-01-15T10:30:00.000Z",
                    "updatedAt": "2024-01-15T10:30:00.000Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Building not found",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Building not found"
                }
              }
            }
          }
        }
      }
    },
    "/api/buildings/update-maintenance": {
      "put": {
        "tags": [
          "Buildings"
        ],
        "summary": "Update Building Maintenance",
        "description": "Update building maintenance dates (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "buildingId",
                  "objectIds",
                  "maintenanceDate"
                ],
                "properties": {
                  "buildingId": {
                    "type": "string",
                    "example": "building-id-here"
                  },
                  "objectIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "obj1",
                      "obj2"
                    ]
                  },
                  "maintenanceDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-12-31T23:59:59.000Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Maintenance dates updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Maintenance dates updated successfully",
                  "data": {
                    "updatedObjects": 5,
                    "maintenanceDate": "2024-12-31T23:59:59.000Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Validation error",
                  "errors": [
                    "Building ID is required",
                    "Object IDs are required"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Building not found",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Building not found"
                }
              }
            }
          }
        }
      }
    },
  "/api/clients/register": {
  "post": {
    "tags": [
      "Clients"
    ],
    "summary": "Register Client",
    "description": "Create a new client with optional user creation (Admin only)",
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "required": [
              "clientName",
              "organizationNumber",
              "primaryContactName",
              "primaryContactEmail",
              "primaryContactPhoneNumber",
              "address",
              "industryType",
              "websiteUrl",
              "description",
              "status"
            ],
            "properties": {
              "clientName": {
                "type": "string",
                "example": "Acme Corporation"
              },
              "organizationNumber": {
                "type": "string",
                "example": "123456-7890"
              },
              "primaryContactName": {
                "type": "string",
                "example": "John Doe"
              },
              "primaryContactEmail": {
                "type": "string",
                "format": "email",
                "example": "john.doe@acme.com"
              },
              "primaryContactPhoneNumber": {
                "type": "string",
                "example": "+1234567890"
              },
              "address": {
                "type": "string",
                "example": "123 Business St, City, Country"
              },
              "industryType": {
                "type": "string",
                "example": "Technology"
              },
              "websiteUrl": {
                "type": "string",
                "example": "https://www.acme.com"
              },
              "description": {
                "type": "string",
                "example": "Acme Corporation is a technology company"
              },
              "status": {
                "type": "string",
                "example": "active"
              },
              "user": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "acme.user"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "user@acme.com"
                    },
                    "contact": {
                      "type": "string",
                      "example": "+1234567890"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "Client created successfully",
        "content": {
          "application/json": {
            "example": {
              "success": true,
              "message": "Client created successfully",
              "data": {
                "id": "client-123",
                "name": "Acme Corporation",
                "organizationNumber": "123456-7890",
                "primaryContactName": "John Doe",
                "primaryContactEmail": "john.doe@acme.com",
                "primaryContactPhoneNumber": "+1234567890",
                "address": "123 Business St, City, Country",
                "industryType": "Technology",
                "timezone": "UTC+1",
                "createdAt": "2024-01-15T10:30:00.000Z"
              }
            }
          }
        }
      },
      "400": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "example": {
              "success": false,
              "message": "Validation error",
              "errors": [
                "Client name is required",
                "Organization number must be unique"
              ]
            }
          }
        }
      },
      "409": {
        "description": "Client with this email already exists",
        "content": {
          "application/json": {
            "example": {
              "success": false,
              "message": "Client with this email already exists"
            }
          }
        }
      }
    }
  }
},
    "/api/clients": {
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Get Clients",
        "description": "Get clients with filters and pagination (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Filter clients by status"
            },
            {
              "name": "createdOn",
              "in": "query",
              "schema": {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string"
                  },
                  "to": {
                    "type": "string"
                  }
                }
              },
              "description": "Filter clients by creation date"
            },
            {
              "name": "properties",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Filter clients by number of properties"
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Page number"
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Items per page"
            },
            {
              "name": "search",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Search clients by name, organization number, primary contact name, primary contact email, address, industry type, or status"
            }
          ],
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientName": {
                    "type": "string",
                    "example": "Acme"
                  },
                  "clientId": {
                    "type": "string",
                    "example": "client-id-here"
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  },
                  "createdOn": {
                    "type": "string",
                    "example": "2024-01-01"
                  },
                  "totalMaintenanceCost": {
                    "type": "number",
                    "example": 5000
                  },
                  "properties": {
                    "type": "integer",
                    "example": 10
                  },
                  "page": {
                    "type": "integer",
                    "default": 1
                  },
                  "limit": {
                    "type": "integer",
                    "default": 10
                  },
                  "search": {
                    "type": "string",
                    "example": "Acme"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Clients retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Clients retrieved successfully",
                  "data": {
                    "clients": [
                      {
                        "id": "client-123",
                        "name": "Acme Corporation",
                        "organizationNumber": "123456-7890",
                        "primaryContactName": "John Doe",
                        "primaryContactEmail": "john.doe@acme.com",
                        "primaryContactPhone": "+1234567890",
                        "address": "123 Business St, City, Country",
                        "industryType": "Technology",
                        "timezone": "UTC+1",
                        "status": "active",
                        "properties": 5,
                        "createdAt": "2024-01-15T10:30:00.000Z",
                        "totalMaintenanceCost": {
                          "type": "object",
                          "properties": {
                            "doors": 100,
                            "floors": 100,
                            "windows": 100,
                            "walls": 100,
                            "roofs": 100,
                            "areas": 100
                          }
                        }
                      }
                    ],
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "totalClients": {
                          "type": "integer",
                          "example": 100
                        },
                        "newClientsThisMonth": {
                          "type": "integer",
                          "example": 10
                        },
                        "totalFileUploads": {
                          "type": "integer",
                          "example": 100
                        },
                        "totalBuildings": {
                          "type": "integer",
                          "example": 100
                        },
                        "filteredClients": {
                          "type": "integer",
                          "example": 100
                        },
                        "totalMaintenanceCost": {
                          "type": "object",
                          "properties": {
                            "doors": {
                              "type": "number",
                              "example": 100
                            },
                            "floors": {
                              "type": "number",
                              "example": 100
                            },
                            "windows": {
                              "type": "number",
                              "example": 100
                            },
                            "walls": {
                              "type": "number",
                              "example": 100
                            },
                            "roofs": {
                              "type": "number",
                              "example": 100
                            },
                            "areas": {
                              "type": "number",
                              "example": 100
                            }
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "currentPage": {
                          "type": "integer",
                          "example": 1
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 10
                        },
                        "itemsPerPage": {
                          "type": "integer",
                          "example": 10
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
   "/api/admin/register-users": {
  "post": {
    "tags": [
      "Admin"
    ],
    "summary": "Register Standard User",
    "description": "Create one or more standard users (Admin only)",
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "required": [
              "clientId",
              "users"
            ],
            "properties": {
              "clientId": {
                "type": "string",
                "example": "405ed09d-9acf-4eb7-9413-39a58f266ca0"
              },
              "users": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "username",
                    "email"
                  ],
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "john_doe"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "john.doe@example.com"
                    },
                    "contact": {
                      "type": "string",
                      "example": "1234567890"
                    }
                  }
                }
              }
            }
          },
          "example": {
            "clientId": "405ed09d-9acf-4eb7-9413-39a58f266ca0",
            "users": [
              {
                "username": "john_doe",
                "email": "john.doe@example.com",
                "contact": "1234567890"
              }
            ]
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "User created successfully",
        "content": {
          "application/json": {
            "example": {
              "success": true,
              "message": "User created successfully",
              "data": {
                "id": "user-123",
                "username": "john.doe",
                "email": "john.doe@example.com",
                "contact": "+1234567890",
                "clientId": "client-456",
                "role": "user",
                "status": "active",
                "createdAt": "2024-01-15T10:30:00.000Z"
              }
            }
          }
        }
      },
      "400": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "example": {
              "success": false,
              "message": "Validation error",
              "errors": [
                "Username is required",
                "Email must be unique"
              ]
            }
          }
        }
      },
      "409": {
        "description": "User with this email already exists",
        "content": {
          "application/json": {
            "example": {
              "success": false,
              "message": "User with this email already exists"
            }
          }
        }
      }
    }
  }
},
    "/api/admin/standard-users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Standard Users",
        "description": "Get all standard users (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully"
          }
        }
      }
    },
    "/api/admin/profile/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Update User",
        "description": "Update user profile (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "updated.username"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "updated@example.com"
                  },
                  "contact": {
                    "type": "string",
                    "example": "+1234567890"
                  },
                  "status": {
                    "type": "string",
                    "example": "active"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "User updated successfully",
                  "data": {
                    "id": "user-123",
                    "username": "updated.username",
                    "email": "updated@example.com",
                    "contact": "+1234567890",
                    "status": "active",
                    "updatedAt": "2024-01-15T10:30:00.000Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "User not found"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/delete-users/{id}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete Standard User",
        "description": "Delete a standard user (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "User deleted successfully"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "User not found"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/maintenance-costs": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Maintenance Costs",
        "description": "Get total maintenance costs and individual costs for different building components using database aggregation queries (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "propertyId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter costs by specific property ID"
          },
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter costs by specific client ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Maintenance costs calculated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "summary": {
                          "type": "object",
                          "properties": {
                            "totalMaintenanceCost": {
                              "type": "number",
                              "description": "Total cost across all maintenance categories"
                            },
                            "totalBuildings": {
                              "type": "number",
                              "description": "Total number of buildings in scope"
                            },
                            "totalArea": {
                              "type": "number",
                              "description": "Total area of all buildings in scope"
                            },
                            "maintenanceUpdates": {
                              "type": "number",
                              "description": "Total number of maintenance items"
                            }
                          }
                        },
                        "breakdown": {
                          "type": "object",
                          "properties": {
                            "totalCosts": {
                              "type": "object",
                              "properties": {
                                "doors": {
                                  "type": "number",
                                  "description": "Total cost for door maintenance"
                                },
                                "floors": {
                                  "type": "number",
                                  "description": "Total cost for floor maintenance"
                                },
                                "windows": {
                                  "type": "number",
                                  "description": "Total cost for window maintenance"
                                },
                                "walls": {
                                  "type": "number",
                                  "description": "Total cost for wall maintenance"
                                },
                                "roofs": {
                                  "type": "number",
                                  "description": "Total cost for roof maintenance"
                                },
                                "areas": {
                                  "type": "number",
                                  "description": "Total cost for area maintenance"
                                }
                              }
                            },
                            "detailedCosts": {
                              "type": "object",
                              "properties": {
                                "doors": {
                                  "type": "object",
                                  "properties": {
                                    "total": {
                                      "type": "number",
                                      "description": "Total cost for doors"
                                    },
                                    "count": {
                                      "type": "number",
                                      "description": "Number of door items"
                                    },
                                    "average": {
                                      "type": "number",
                                      "description": "Average cost per door item"
                                    }
                                  }
                                },
                                "floors": {
                                  "type": "object",
                                  "properties": {
                                    "total": {
                                      "type": "number",
                                      "description": "Total cost for floors"
                                    },
                                    "count": {
                                      "type": "number",
                                      "description": "Number of floor items"
                                    },
                                    "average": {
                                      "type": "number",
                                      "description": "Average cost per floor item"
                                    }
                                  }
                                },
                                "windows": {
                                  "type": "object",
                                  "properties": {
                                    "total": {
                                      "type": "number",
                                      "description": "Total cost for windows"
                                    },
                                    "count": {
                                      "type": "number",
                                      "description": "Number of window items"
                                    },
                                    "average": {
                                      "type": "number",
                                      "description": "Average cost per window item"
                                    }
                                  }
                                },
                                "walls": {
                                  "type": "object",
                                  "properties": {
                                    "total": {
                                      "type": "number",
                                      "description": "Total cost for walls"
                                    },
                                    "count": {
                                      "type": "number",
                                      "description": "Number of wall items"
                                    },
                                    "average": {
                                      "type": "number",
                                      "description": "Average cost per wall item"
                                    }
                                  }
                                },
                                "roofs": {
                                  "type": "object",
                                  "properties": {
                                    "total": {
                                      "type": "number",
                                      "description": "Total cost for roofs"
                                    },
                                    "count": {
                                      "type": "number",
                                      "description": "Number of roof items"
                                    },
                                    "average": {
                                      "type": "number",
                                      "description": "Average cost per roof item"
                                    }
                                  }
                                },
                                "areas": {
                                  "type": "object",
                                  "properties": {
                                    "total": {
                                      "type": "number",
                                      "description": "Total cost for areas"
                                    },
                                    "count": {
                                      "type": "number",
                                      "description": "Number of area items"
                                    },
                                    "average": {
                                      "type": "number",
                                      "description": "Average cost per area item"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "filters": {
                          "type": "object",
                          "properties": {
                            "propertyId": {
                              "type": "string",
                              "nullable": true,
                              "description": "Applied property filter"
                            },
                            "clientId": {
                              "type": "string",
                              "nullable": true,
                              "description": "Applied client filter"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Unauthorized access"
                }
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Admin access required"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/profile/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Profile",
        "description": "Get user profile (Admin can get any user, standard users can only get their own)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "User profile retrieved successfully",
                  "data": {
                    "id": "user-123",
                    "username": "john.doe",
                    "email": "john.doe@example.com",
                    "contact": "+1234567890",
                    "clientId": "client-456",
                    "role": "user",
                    "status": "active",
                    "createdAt": "2024-01-15T10:30:00.000Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "User not found"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/profile": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User Profile",
        "description": "Update user profile (Standard users only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "updated.username"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "updated@example.com"
                  },
                  "contact": {
                    "type": "string",
                    "example": "+1234567890"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Profile updated successfully",
                  "data": {
                    "id": "user-123",
                    "username": "updated.username",
                    "email": "updated@example.com",
                    "contact": "+1234567890",
                    "updatedAt": "2024-01-15T10:30:00.000Z"
                  }
                }
              }
            }
          },
          "409": {
            "description": "User with this email already exists",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "User with this email already exists"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/get-users/{clientId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Users by Client",
        "description": "Get users associated with a specific client (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            }
        
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }

        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Users retrieved successfully",
                  "data": {
                    "users": [
                      {
                        "id": "user-123",
                        "username": "john.doe",
                        "email": "john.doe@example.com",
                        "contact": "+1234567890",
                        "clientId": "client-456",
                        "role": "user",
                        "status": "active",
                        "createdAt": "2024-01-15T10:30:00.000Z"
                      }
                    ],
                    "pagination": {
                      "page": 1,
                      "limit": 10,
                      "total": 50,
                      "pages": 5
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
 "/api/pricelist": {
  "get": {
    "tags": [
      "Pricelist"
    ],
    "summary": "Get All Pricelists",
    "description": "Get all pricelists with optional filters",
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "parameters": [
      {
        "name": "page",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      {
        "name": "limit",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 10
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Pricelists retrieved successfully",
        "content": {
          "application/json": {
            "example": {
              "success": true,
              "message": "Pricelists retrieved successfully",
              "data": {
                "window": [
                  {
                    "id": "5b0055d7-8da9-4fbf-ad4f-3a90e990fb3c",
                    "type": "window",
                    "object": "515 x 130 fast",
                    "price": 0,
                    "createdAt": "2025-08-08T12:49:03.620Z",
                    "updatedAt": "2025-08-08T12:49:03.620Z"
                  }
                ],
                "roof": [
                  {
                    "id": "0837c10e-8a78-4a4f-92ab-c10abefdd60a",
                    "type": "roof",
                    "object": "Svart plåttak 200",
                    "price": 5,
                    "createdAt": "2025-08-08T11:47:21.380Z",
                    "updatedAt": "2025-08-12T06:22:20.033Z"
                  }
                ],
                "floor": [
                  {
                    "id": "97075fa1-38e8-4889-8a9a-85c7c7fec49e",
                    "type": "floor",
                    "object": "Tegeltak inkl takstol",
                    "price": 0,
                    "buildingId": "c8cdf168-d6c2-4593-860c-2afac580cda7",
                    "createdAt": "2025-08-08T11:45:33.458Z",
                    "updatedAt": "2025-08-08T11:45:33.458Z"
                  }
                ],
                "wall": [
                  {
                    "id": "552038c8-555a-4651-88b3-f1282c366895",
                    "type": "wall",
                    "object": "YV 300",
                    "price": 1,
                    "createdAt": "2025-08-08T11:53:52.779Z",
                    "updatedAt": "2025-08-08T11:54:59.367Z"
                  }
                ],
                "pagination": {
                  "page": 1,
                  "limit": 10,
                  "total": 29,
                  "pages": 3
                }
              }
            }
          }
        }
      }
    }
  },
  "post": {
    "tags": [
      "Pricelist"
    ],
    "summary": "Create Pricelist from Blob",
    "description": "Create pricelist from Azure blob storage file (Admin only)",
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "required": [
              "buildingId",
              "fileUrl"
            ],
            "properties": {
              "buildingId": {
                "type": "string",
                "example": "building-id-here"
              },
              "fileUrl": {
                "type": "string",
                "example": "https://storage.blob.core.windows.net/container/file.csv"
              }
            }
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "Pricelist created successfully",
        "content": {
          "application/json": {
            "example": {
              "success": true,
              "message": "Pricelist created successfully",
              "data": {
                "id": "pricelist-123",
                "name": "Building Pricelist",
                "buildingId": "building-123",
                "isGlobal": false,
                "isActive": true,
                "effectiveFrom": "2024-01-01T00:00:00.000Z",
                "createdAt": "2024-01-15T10:30:00.000Z"
              }
            }
          }
        }
      },
      "400": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "example": {
              "success": false,
              "message": "Validation error",
              "errors": [
                "Building ID is required",
                "File URL is required"
              ]
            }
          }
        }
      },
      "404": {
        "description": "Building not found",
        "content": {
          "application/json": {
            "example": {
              "success": false,
              "message": "Building not found"
            }
          }
        }
      }
    }
  }
},
    "/api/pricelist/{id}": {
      "get": {
        "tags": [
          "Pricelist"
        ],
        "summary": "Get Pricelist by ID",
        "description": "Get pricelist by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pricelist retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Pricelist retrieved successfully",
                  "data": {
                    "id": "pricelist-123",
                    "name": "Building Pricelist",
                    "buildingId": "building-123",
                    "isGlobal": false,
                    "isActive": true,
                    "effectiveFrom": "2024-01-01T00:00:00.000Z",
                    "createdAt": "2024-01-15T10:30:00.000Z",
                    "updatedAt": "2024-01-15T10:30:00.000Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pricelist not found",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Pricelist not found"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Pricelist"
        ],
        "summary": "Update Pricelist",
        "description": "Update pricelist (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "interval": {
                    "type": "string",
                    "example": "1-year, 2-years, 3-years, 4-years, 5-years, 6-years, 7-years, 8-years, 9-years, 10-years"
                  },
                  "price": {
                    "type": "number",
                    "example": 1000
                  } 

                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pricelist updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Pricelist updated successfully",
                  "data": {
                    "id": "pricelist-123",
                    "interval": "1-year",
                    "price": 1000,
                    "buildingId": "building-123",
                    "isGlobal": false,
                    "isActive": true,
                    "effectiveFrom": "2024-01-01T00:00:00.000Z",
                    "updatedAt": "2024-01-15T10:30:00.000Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pricelist not found",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Pricelist not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Pricelist"
        ],
        "summary": "Delete Pricelist",
        "description": "Delete pricelist (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pricelist deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Pricelist deleted successfully"
                }
              }
            }
          },
          "404": {
            "description": "Pricelist not found",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Pricelist not found"
                }
              }
            }
          }
        }
      }
    },
    "/api/pricelist/test-azure-storage": {
      "get": {
        "tags": [
          "Pricelist"
        ],
        "summary": "Test Azure Storage",
        "description": "Test Azure Storage configuration",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Azure Storage test completed",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Azure Storage connection successful",
                  "data": {
                    "connectionStatus": "connected",
                    "containerAccess": true,
                    "blobAccess": true
                  }
                }
              }
            }
          },
          "500": {
            "description": "Azure Storage test failed",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "message": "Azure Storage connection failed",
                  "error": "Invalid connection string or credentials"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Health Check",
      "description": "API health check endpoints"
    },
    {
      "name": "Authentication",
      "description": "User authentication and authorization endpoints"
    },
    {
      "name": "Properties",
      "description": "Property management endpoints"
    },
    {
      "name": "Buildings",
      "description": "Building management endpoints"
    },
    {
      "name": "Clients",
      "description": "Client management endpoints"
    },
    {
      "name": "Admin",
      "description": "Admin-only user management endpoints"
    },
    {
      "name": "Users",
      "description": "User profile management endpoints"
    },
    {
      "name": "Pricelist",
      "description": "Pricelist management endpoints"
    }
  ]
}